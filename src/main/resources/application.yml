server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/payment_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: smtp.your-email-provider.com
    port: 587
    username: your-email@example.com
    password: your-password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    jwt:
      secret: 2BdHJvXUQ3vJQ8ZJkMw1R1f1Ks3kJ5V8bNlM4NpQJwo=
      expiration: 86400000
    oauth2:
      client:
        registration:
          google:
            client-id: your-google-client-id
            client-secret: your-google-client-secret
            scope: profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            authorization-grant-type: authorization_code
            client-name: Google
          yandex:
            client-id: your-yandex-client-id
            client-secret: your-yandex-client-secret
            scope: profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/yandex"
            authorization-grant-type: authorization_code
            client-name: Yandex
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          yandex:
            authorization-uri: https://oauth.yandex.com/authorize
            token-uri: https://oauth.yandex.com/token
            user-info-uri: https://login.yandex.ru/info
            user-name-attribute: id
  logging:
    level:
      org:
        springframework:
          security: DEBUG